version: '3.7'
services:
    api1:
        restart: always
        container_name: 'API_NODE_001'
        environment:
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            SERVER_PORT: 8080
        image: dartrinha
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        depends_on: 
            - db
            - redis
        networks:
        - localhost
    api2:
        restart: always
        container_name: 'API_NODE_002'
        environment:
            DB_HOST: ${DB_HOST}
            DB_PORT: ${DB_PORT}
            SERVER_PORT: 8081
        image: dartrinha
        ports:
            - "8081:8081"
        depends_on: 
            - db
            - redis
        networks:
        - localhost
    nginx: # Load Balancer
        image: nginx:latest
        volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
        - api1
        # - api2
        ports:
        - "9999:9999"
        # deploy:
        #     resources:
        #         limits:
        #             cpus: '0.25'
        #             memory: '0.5GB'
    redis: 
        image: redis:latest
        depends_on:
        - db
        ports:
        - "6379:6379"
        deploy:
            resources:
                limits:
                    cpus: '0.25'
                    memory: '0.5GB'
            
    db:
        image: mysql:latest
        restart: always
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ports:
            - '${DB_PORT}:${DB_PORT}'
        volumes:
            - my-db:/var/lib/mysql
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
        networks:
        - localhost
volumes:
    my-db:
networks:
  localhost:
    driver: bridge